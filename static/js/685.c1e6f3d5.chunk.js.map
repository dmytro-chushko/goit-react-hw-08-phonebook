{"version":3,"file":"static/js/685.c1e6f3d5.chunk.js","mappings":"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","sources":["helpers/handleClickShowPass.js","helpers/handleMouseDownPassword.js","helpers/getVisibleContacts.js","helpers/isNameInContacts.js","helpers/fetchErrorHendler.js","../node_modules/@mui/icons-material/esm/HowToReg.js","pages/Register.jsx","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js"],"sourcesContent":["export const handleClickShowPass = (triggerState, trigger) => {\n  trigger(!triggerState);\n};\n","export const handleMouseDownPassword = event => {\n  event.preventDefault();\n};\n","export const getVisibleContacts = (filter, contacts) => {\n  const normalizeFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n","export const isNameInContacts = (data, name) => {\n  const normalizeName = name.toLowerCase();\n  return data.find(contact => contact.name.toLowerCase() === normalizeName);\n};\n","import { Notify } from 'notiflix';\n\nexport const fetchErrorHendler = error => {\n  switch (error) {\n    case 400:\n      Notify.failure('Wrong email or password');\n      break;\n    case 500:\n      Notify.failure('Something wrong, please try later');\n      break;\n    case 'FETCH_ERROR':\n      Notify.failure('Chek your connection to the internet');\n      break;\n    default:\n  }\n};\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"m9 17 3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m4.47 8.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n}), 'HowToReg');","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations, authSlice } from 'redux/auth';\nimport {\n  handleClickShowPass,\n  handleMouseDownPassword,\n  fetchErrorHendler,\n} from 'helpers';\nimport { useForm } from 'react-hook-form';\n\nimport {\n  Box,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Typography,\n  FormControl,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { Visibility, VisibilityOff, HowToReg } from '@mui/icons-material';\n\nconst { useRegisterUserMutation } = authOperations;\nconst { setToken } = authSlice;\n\nconst Register = () => {\n  const [showPass, setShowPass] = useState(false);\n  const [showConfPass, setShowConfPass] = useState(false);\n  const [signUp, { isLoading }] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n    reset,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n      confPass: '',\n    },\n  });\n  const watchPass = watch('password', '');\n\n  const onSubmit = async ({ name, email, password }) => {\n    const result = await signUp({ name, email, password });\n    if (result.error) {\n      fetchErrorHendler(result.error.status);\n      return;\n    }\n    if (result.data) {\n      dispatch(setToken(result.data.token));\n    }\n    reset();\n  };\n\n  return (\n    <Box sx={{ maxWidth: '375px', mx: 'auto' }}>\n      <Typography\n        variant=\"h1\"\n        align=\"center\"\n        sx={{ mb: '10px', fontSize: '32px' }}\n      >\n        REGISTRATION\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl fullWidth sx={{ gap: 1 }}>\n          <TextField\n            label=\"Name\"\n            type=\"text\"\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Input your name\"\n            error={!!errors?.name}\n            helperText={errors?.name ? errors?.name?.message : null}\n            {...register('name', {\n              required: 'Name is required',\n              maxLength: {\n                value: 20,\n                message: 'Only 20 symbols',\n              },\n            })}\n          />\n          <TextField\n            label=\"Email\"\n            type=\"email\"\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Input your email\"\n            error={!!errors?.email}\n            helperText={errors?.email ? errors?.email?.message : null}\n            {...register('email', {\n              required: 'Email is required',\n              maxLength: {\n                value: 30,\n                message: 'Only 30 symbols',\n              },\n              pattern: {\n                value:\n                  /^(([0-9A-Za-z._%+-]{1,})@([-0-9A-Za-z]{1,}.){1,2}[-A-Za-z]{2,})$/iu,\n                message: 'Email must be such view email@domein.com',\n              },\n            })}\n          />\n          <TextField\n            label=\"Password\"\n            type={showPass ? 'text' : 'password'}\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Create a passowrd\"\n            error={!!errors?.password}\n            helperText={errors?.password ? errors?.password?.message : null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={() => handleClickShowPass(showPass, setShowPass)}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPass ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            {...register('password', {\n              required: 'Password is required',\n              minLength: {\n                value: 7,\n                message: 'Minimum 7 symbols',\n              },\n              maxLength: {\n                value: 30,\n                message: 'Only 30 symbols',\n              },\n            })}\n          />\n          <TextField\n            label=\"Password confirmation\"\n            type={showConfPass ? 'text' : 'password'}\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Confirm the passowrd\"\n            error={!!errors?.confPass}\n            helperText={errors?.confPass ? errors?.confPass?.message : null}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={() =>\n                      handleClickShowPass(showConfPass, setShowConfPass)\n                    }\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showConfPass ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            {...register('confPass', {\n              required: 'Password is required',\n              validate: {\n                positive: value =>\n                  value === watchPass || \"Passwords doesn't match\",\n              },\n            })}\n          />\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            loadingPosition=\"start\"\n            variant=\"contained\"\n            loading={isLoading}\n            startIcon={<HowToReg />}\n          >\n            Register in\n          </LoadingButton>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nexport default Register;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["handleClickShowPass","triggerState","trigger","handleMouseDownPassword","event","preventDefault","getVisibleContacts","filter","contacts","normalizeFilter","toLowerCase","contact","name","includes","isNameInContacts","data","normalizeName","find","fetchErrorHendler","error","Notify","createSvgIcon","_jsx","fillRule","d","useRegisterUserMutation","authOperations","setToken","authSlice","useState","showPass","setShowPass","showConfPass","setShowConfPass","signUp","isLoading","dispatch","useDispatch","useForm","mode","defaultValues","email","password","confPass","register","handleSubmit","watch","errors","formState","reset","watchPass","onSubmit","result","status","token","Box","sx","maxWidth","mx","Typography","variant","align","mb","fontSize","FormControl","fullWidth","gap","TextField","label","type","size","placeholder","helperText","message","required","maxLength","value","pattern","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","minLength","validate","positive","LoadingButton","loadingPosition","loading","startIcon","HowToReg"],"sourceRoot":""}