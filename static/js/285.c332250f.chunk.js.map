{"version":3,"file":"static/js/285.c332250f.chunk.js","mappings":"uOAwEA,UAlEiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBADiB,SAEEL,EAAO,CAAEP,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAFxB,QAEbS,EAFa,QAGRC,MACTN,GAASO,EAAAA,EAAAA,IAASF,EAAOC,KAAKE,QAEhCC,QAAQC,IAAIL,EAAOC,MAEnBb,EAAQ,IACRE,EAAS,IACTE,EAAQ,IAVW,2CAAH,sDAalB,OACE,iCACE,0CACA,kBAAMc,SAAUT,EAAhB,WACE,mBAAOU,QAAQ,OAAf,WACE,iCACA,kBACEC,GAAG,OACHC,KAAK,OACLtB,KAAK,OACLuB,MAAM,kBACNC,MAAOxB,EACPyB,UAAQ,EACRC,SAAU,SAAAf,GAAC,OAAIV,EAAQU,EAAEgB,OAAOH,MAArB,QAGf,mBAAOJ,QAAQ,QAAf,WACE,kCACA,kBACEC,GAAG,QACHC,KAAK,QACLtB,KAAK,QACLuB,MAAM,cACNC,MAAOtB,EACPuB,UAAQ,EACRC,SAAU,SAAAf,GAAC,OAAIR,EAASQ,EAAEgB,OAAOH,MAAtB,QAGf,mBAAOJ,QAAQ,OAAf,WACE,mCACA,kBACEC,GAAG,OACHC,KAAK,WACLtB,KAAK,OACLuB,MAAM,iBACNC,MAAOpB,EACPqB,UAAQ,EACRC,SAAU,SAAAf,GAAC,OAAIN,EAAQM,EAAEgB,OAAOH,MAArB,QAGf,mBAAQF,KAAK,SAAb,6BAIP,C","sources":["pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useRegisterUserMutation } from 'redux/contacts/contactsOperations';\nimport { setToken } from 'redux/auth/authSlice';\n// import { setIsLoggedIn, setUserName } from 'redux/contacts/contactsActions';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPass] = useState('');\n  const [signUp] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await signUp({ name, email, password });\n    if (result.data) {\n      dispatch(setToken(result.data.token));\n    }\n    console.log(result.data);\n\n    setName('');\n    setEmail('');\n    setPass('');\n  };\n\n  return (\n    <>\n      <h1>REGISTRATION</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">\n          <p>Name</p>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            title=\"Input your name\"\n            value={name}\n            required\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          <p>Email</p>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            title=\"Input email\"\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n        </label>\n        <label htmlFor=\"pass\">\n          <p>Number</p>\n          <input\n            id=\"pass\"\n            type=\"password\"\n            name=\"pass\"\n            title=\"Input password\"\n            value={password}\n            required\n            onChange={e => setPass(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Registrate</button>\n      </form>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["useState","name","setName","email","setEmail","password","setPass","useRegisterUserMutation","signUp","dispatch","useDispatch","handleSubmit","e","preventDefault","result","data","setToken","token","console","log","onSubmit","htmlFor","id","type","title","value","required","onChange","target"],"sourceRoot":""}